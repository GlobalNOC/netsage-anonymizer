#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;

use Getopt::Long;
use Storable qw(freeze thaw retrieve store);

my $in_file = '/var/cache/netsage/netflow_importer.cache';
#my $in_file = '/var/cache/netsage/netflow_importer_cenic.cache';
my $out_file; # = 'netflow_importer_new.cache';
my $pattern = '';
my $delete=0;

GetOptions(	
		'infile=s'  => \$in_file,
        'outfile=s' => \$out_file,
        'pattern=s' => \$pattern,
        'delete=i' =>  \$delete
	  );

if ( ! $out_file ) {
    $out_file = $in_file . ".new";
}

$pattern = qr/$pattern/;

my $status = read_cache();


#print "status: \n " . Dumper ( $status ) . "\n";
foreach my $key ( keys %$status ) {
	if ( $key =~ /2017-01-0[234]/ ) {
		#print "will delete $key\n";
		#delete $status->{ $key };

	}
    if ( $delete && $pattern ne "" && $key =~ $pattern ) {
        warn "would delete key: $key";
        delete $status->{ $key };

    }
	print "$key\n";
}

#write_cache( $status );


sub read_cache {
    my $filename = $in_file;

    $status = retrieve $filename
	    or die "Cache file $filename does not exist! $!\n";

    return $status;

}

sub write_cache {
    my $status = shift;
    my $filename = $out_file;
    store $status, $filename;

}

