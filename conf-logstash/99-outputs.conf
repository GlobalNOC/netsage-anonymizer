##### COPY ANY CHANGES TO YOUR EXISTING VERSION AFTER AN UPGRADE   #####

# info useful for monitoring what logstash is doing
filter {
  if [type] == "flow" {
       ruby {
          id => '99-1'
          code => '
            event.set( "@exit_time", Time.now );
            event.set( "@processing_time", event.get("@exit_time") - event.get("@injest_time") );
          '
          tag_on_exception => '_rubyexception in 99-outputs'
       }
   }
}

# end of the pipeline
output {
  if [type] == "flow" {

       #-- To send results to rabbitmq 
       # The user => "${rabbitmq_output_username:localhost}" format works if the rabbitmq username and password are in the 
       # logstash keystore as rabbitmq_output_username and rabbitmq_output_pw. 
       # You can also just type in the username and pw here, in quotes.
       # Rabbitmq host may be, eg, "localhost", "xx.xx.xx.xx", "["hostname1", "hostname2"].
       # Change the queue key and exchange, if needed.
        rabbitmq {
            host          => "${rabbitmq_output_host:localhost}"
            user          => "${rabbitmq_output_username:guest}"
            password      => "${rabbitmq_output_pw:guest}"
            key           => "${rabbitmq_output_key:netsage_archive_input}" 
            exchange      => "netsage.direct"
            exchange_type => "direct"
            connection_timeout => 10000
            durable       => true
            persistent    => false
        }

       #-- For testing: To write all output to screen
       # stdout { codec => rubydebug { metadata => true } }
       
       #-- If desired: results can be put directly into a local elasticsearch
       # elasticsearch {
       #     hosts => ["127.0.0.1"]
       #     index => "netsage_flow-%{+YYYY.MM.dd}"
       # }

  }
}
