filter {
  if [type] == "flow" {

    # make sure this has been renamed (in case aggregation conf has not been used)
    if [flow_fingerprint] {
      mutate {
        rename    => { 'flow_fingerprint' => '[meta][id]' }
      }
    }

    # add/replace start and end with date fields
     date {
       match  => [ '[start_timestamp]', 'UNIX' ]
       target => '[start]'
     }
     date {
       match  => [ '[end_timestamp]' ,'UNIX' ]
       target => '[end]'
     }

    # remove unneeded fields
    mutate {
      remove_field => "[no_previous]"
      remove_field => "[meta][src_city]"
      remove_field => "[meta][dst_city]"
      remove_field => "[values][src_asn]"
      remove_field => "[values][dst_asn]"
      remove_field => "[meta][src_ifindex]"
      remove_field => "[meta][dst_ifindex]"
    }

    # convert strings to numeric logstash data types 
    mutate {
      convert => {
          "[meta][src_latitude]"               => "float"
          "[meta][dst_latitude]"               => "float"
          "[meta][src_longitude]"              => "float"
          "[meta][dst_longitude]"              => "float"
          "[meta][scireg][src][asn]"           => "integer"
          "[meta][scireg][dst][asn]"           => "integer"
          "[meta][scireg][src][latitude]"      => "float"
          "[meta][scireg][dst][latitude]"      => "float"
          "[meta][scireg][src][longitude]"     => "float"
          "[meta][scireg][dst][longitude]"     => "float"
          "[meta][scireg][src][org_latitude]"  => "float"
          "[meta][scireg][dst][org_latitude]"  => "float"
          "[meta][scireg][src][org_longitude]" => "float"
          "[meta][scireg][dst][org_longitude]" => "float"
        }
    }

  }
}
