# Basically,
# If the dst is in the multicast range, set organization and country to Multicast.
# Tag the flow with asn, organization, and location information from MaxMind dbs.
# (But if the geoip-asn disagrees with the flow header's asn, and the latter is a meaningful one, use it.)
# Note that the organization will be the owner of the ASN according to MaxMind, not of the IP specificially.

filter {
  if [type] == "flow" {

    # See if the DESTINATION is in the multicast range (only destinations can be multicast)
    cidr {
        id => "50-1"
        address => [ "%{[meta][dst_ip]}" ]
        network => [ "224.0.0.0/4", "ff00::/8" ]
        add_field => { "@multicast_dst" => "yes" }
    }
    if [@multicast_dst] == "yes" {
        mutate {
            id => "50-2"
            add_field => {"[meta][dst_continent]" => "Multicast"}
            add_field => {"[meta][dst_country_name]" => "Multicast"}
            add_field => {"[meta][dst_organization]" => "Multicast"}
            # don't set location
            # leave asn whatever was in the flow header
            }
    }

    # --- Basic geoip tagging --- 

    # SOURCE - ASN DB - asn and organization -
    # (for some reason, we have to use fields=>["autonomous_system_number"] but "asn" is returned, etc.  !?)
    geoip {
        id => "50-3"
        database => "/var/cache/netsage/GeoLite2-ASN.mmdb"
        default_database_type => "ASN"
        cache_size => 1000
        source => "[meta][src_ip]"
        fields => [ "autonomous_system_number", "autonomous_system_organization" ]
        target => "[src_geoip]"
        tag_on_failure => ["_geoip_lookup_failure - src IP not in ASN db"]
    }
    # Make sure all asn's are integers in the following (I found =='s don't work with strings?!?) 
    mutate { convert => { "[src_geoip][asn]" => "integer" } }

    if "_geoip_lookup_failure - src IP not in ASN db" in [tags] {
        # We have no choice but to keep the asn the flow came in with
        # and we have no way to determine the organization
        mutate {
            id => "50-4"
            add_field => {"[meta][src_organization]" => "Unknown"}
        }
    } else if ![meta][src_asn] or [meta][src_asn] == 0 or [meta][src_asn] == [src_geoip][asn] or [meta][src_asn] == 4294967295 or [meta][src_asn] == 23456 {
        # If no asn in input; or asn is 0, 4294967295, or 23456; or geoip gives same asn anyway, use geoip results for asn and org
        # (4294967295 is the max asn and is used when the flow is pushed before an asn can be determined. 23456 is a placeholder.)
        mutate {
            id => "50-5"
	    copy => { 
                "[src_geoip][asn]"    => "[meta][src_asn]" 
                "[src_geoip][as_org]" => "[meta][src_organization]" 
            }
       }
    } else if [meta][src_asn] != [src_geoip][asn] {
        # If geoip's asn is different, don't overwrite what was in the flow header;
        # BUT WE ARE KEEPING GEOIP'S ORG NAME FOR NOW.
        mutate {
            id => "50-6"
            add_tag => [ "src asn mismatch -  geoip=%{[src_geoip][asn]}, flow=%{[meta][src_asn]}" ]
            copy => { "[src_geoip][as_org]" => "[meta][src_organization]" }
       }
    } 
    
    # SOURCE - CITY DB - location -
    geoip {
        id => "50-7"
        database => "/var/cache/netsage/GeoLite2-City.mmdb"
        default_database_type => "City"
        cache_size => 1000
        source => "[meta][src_ip]"
        fields => [ "continent_name", "country_name", "location"]
        target => "[src_geoip]"
        tag_on_failure => ["_geoip_lookup_failure - src IP not in CITY db"]
    }

    if !("_geoip_lookup_failure - src IP not in CITY db" in [tags]) {
        mutate {
            id => "50-9"
            copy => {
                "[src_geoip][continent_name]" => "[meta][src_continent]"
                "[src_geoip][country_name]"   => "[meta][src_country_name]"
                "[src_geoip][location]"       => "[meta][src_location]"
            }
        }
    }
    

    # DESTINATION if not MULTICAST -
    if !([@multicast_dst] == "yes") {

    # DESTINATION - ASN DB -
    geoip {
        id => "50-10"
        database => "/var/cache/netsage/GeoLite2-ASN.mmdb"
        default_database_type => "ASN"
        cache_size => 1000
        source => "[meta][dst_ip]"
        fields => [ "autonomous_system_number", "autonomous_system_organization" ]
        target => "[dst_geoip]"
        tag_on_failure => ["_geoip_lookup_failure - dst IP not in ASN db"]
    }
    mutate { convert => { "[dst_geoip][asn]" => "integer" } }

    if "_geoip_lookup_failure - dst IP not in ASN db" in [tags] {
        mutate {
            id => "50-11"
            add_field => {"[meta][dst_organization]" => "Unknown"}
        }
    } else if ![meta][dst_asn] or [meta][dst_asn] == 0 or [meta][dst_asn] == [dst_geoip][asn] or [meta][dst_asn] == 4294967295 or [meta][dst_asn] == 23456 {
        mutate {
            id => "50-12"
	    copy => { 
                "[dst_geoip][asn]"    => "[meta][dst_asn]" 
                "[dst_geoip][as_org]" => "[meta][dst_organization]" 
            }
       }
    } else if [meta][dst_asn] != [dst_geoip][asn] {
        mutate {
            id => "50-13"
            add_tag => [ "dst asn mismatch -  geoip=%{[dst_geoip][asn]}, flow=%{[meta][dst_asn]}" ]
            copy => { "[dst_geoip][as_org]" => "[meta][dst_organization]" }
       }
    } 
    
    # DESTINATION - CITY DB -
    geoip {
        id => "50-14"
        database => "/var/cache/netsage/GeoLite2-City.mmdb"
        default_database_type => "City"
        cache_size => 1000
        source => "[meta][dst_ip]"
        fields => [ "continent_name", "country_name", "location"]
        target => "[dst_geoip]"
        tag_on_failure => ["_geoip_lookup_failure - dst IP not in CITY db"]
    }

    if !("_geoip_lookup_failure - dst IP not in CITY db" in [tags]) {
        mutate {
            id => "50-15"
            copy => {
                "[dst_geoip][continent_name]" => "[meta][dst_continent]"
                "[dst_geoip][country_name]"   => "[meta][dst_country_name]"
                "[dst_geoip][location]"       => "[meta][dst_location]"
            }
        }
    }
    
    } # end if not multicast


    # In case the IP was not found in the db or the db was missing a piece of information, set missing fields to Unknown
    if ![meta][src_organization] {
        mutate {
            add_field => { "[meta][src_organization]" => "Unknown" }
        }
    }
    if ![meta][dst_organization] {
        mutate {
            add_field => { "[meta][dst_organization]" => "Unknown" }
        }
    }
    if ![meta][src_country_name] {
        mutate {
            add_field => { "[meta][src_country_name]" => "Unknown" }
        }
    }
    if ![meta][dst_country_name] {
        mutate {
            add_field => { "[meta][dst_country_name]" => "Unknown" }
        }
    }
    if ![meta][src_continent] {
        mutate {
            add_field => { "[meta][src_continent]" => "Unknown" }
        }
    }
    if ![meta][dst_continent] {
        mutate {
            add_field => { "[meta][dst_continent]" => "Unknown" }
        }
    }


    mutate { 
        id => "50-16"
        remove_field =>  "[src_geoip]" 
        remove_field =>  "[dst_geoip]" 
        remove_field =>  "@multicast_dst"
    }

  }
}
