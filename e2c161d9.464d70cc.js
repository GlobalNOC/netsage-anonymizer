(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{102:function(t,e,r){"use strict";r.d(e,"a",(function(){return u})),r.d(e,"b",(function(){return f}));var a=r(0),n=r.n(a);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var p=n.a.createContext({}),l=function(t){var e=n.a.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},u=function(t){var e=l(t.components);return n.a.createElement(p.Provider,{value:e},t.children)},b={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},d=n.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=l(r),d=a,f=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return r?n.a.createElement(f,s(s({ref:e},p),{},{components:r})):n.a.createElement(f,s({ref:e},p))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return s})),r.d(e,"rightToc",(function(){return c})),r.d(e,"default",(function(){return l}));var a=r(2),n=r(6),o=(r(0),r(102)),i={id:"tstat",title:"Tstat",sidebar_label:"Tstat"},s={unversionedId:"pipeline/tstat",id:"pipeline/tstat",isDocsHomePage:!1,title:"Tstat",description:"Tstat is a passive sniffer that provides insights into traffic patterns.  The Netsage project tstat-transport provides a way to send data the captured data to a rabbitmq host which is processed by logstash than displayed in our dashboard.",source:"@site/docs/pipeline/tstat.md",slug:"/pipeline/tstat",permalink:"/netsage-pipeline/docs/next/pipeline/tstat",editUrl:"https://github.com/netsage-project/netsage-pipeline/edit/master/website/docs/pipeline/tstat.md",version:"current",sidebar_label:"Tstat"},c=[{value:"Docker",id:"docker",children:[]}],p={rightToc:c};function l(t){var e=t.components,r=Object(n.a)(t,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,r,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://tstat.polito.it/"}),"Tstat")," is a passive sniffer that provides insights into traffic patterns.  The Netsage project ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/netsage-project/tstat-transport"}),"tstat-transport")," provides a way to send data the captured data to a rabbitmq host which is processed by ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"logstash"}),"logstash")," than displayed in our ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/netsage-project/netsage-grafana-configs"}),"dashboard"),"."),Object(o.b)("h2",{id:"docker"},"Docker"),Object(o.b)("p",null,"There are docker images created for the tstat process as well as the sendining of tstat logs to the appropriate rabbit MQ server.  That flow is still in a beta state and is in progress.  The initial documentation is available ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/netsage-project/tstat-transport/blob/master/docs/docker.md"}),"here"),".  "))}l.isMDXComponent=!0}}]);